apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: dev
  namespace: kargo-demo-project
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: my-warehouse
    sources:
      direct: true
  promotionTemplate:
    spec:
      steps:
      - task:
          name: demo-promo-process
        as: promo-process    
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod
  namespace: kargo-demo-project
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: my-warehouse
    sources:
      stages:
      - dev
  promotionTemplate:
    spec:
      steps:
      - task:
          name: demo-promo-process
        as: promo-process    
---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: demo-promo-process
  namespace: kargo-demo-project
spec:
  vars:
    - name: gitopsRepo
      value: https://github.com/nitishfy/kustomize-tutorial
    - name: imageRepo
      value: public.ecr.aws/nginx/nginx
    - name: srcPath
      value: ./src
    - name: outPath
      value: ./out
    - name: targetBranch
      value: stage/${{ ctx.stage }}
  steps:
  - uses: git-clone
    config:
      repoURL: ${{ vars.gitopsRepo }}
      checkout:
      - branch: main
        path: ${{ vars.srcPath }}
      - branch: stage/${{ ctx.stage }}
        create: true
        path: ${{ vars.outPath }}
  - uses: git-clear
    config:
      path: ${{ vars.outPath }}
  - uses: http
    as: cat-facts
    config:
      method: GET
      url: https://www.catfacts.net/api/
      outputs:
      - name: status
        fromExpression: response.status
      - name: fact1
        fromExpression: response.body.facts[0]
      - name: fact2
        fromExpression: response.body.facts[1]    
  - uses: kustomize-set-image
    as: update-image
    config:
      path: ${{ vars.srcPath }}/base
      images:
        - image: ${{ vars.imageRepo }}
          tag: ${{ imageFrom(vars.imageRepo).Tag }}
  - uses: kustomize-build
    config:
      path: ${{ vars.srcPath }}/overlays/${{ ctx.stage }}
      outPath: ${{ vars.outPath }}/manifests.yaml
  - uses: git-commit
    as: commit
    config:
      path:  ${{ vars.outPath }}
      messageFromSteps:
      - update-image
  - uses: git-push
    as: push
    config:
      path: ${{ vars.outPath }}
      targetBranch: ${{ vars.targetBranch }}
  - uses: argocd-update
    config:
      apps:
      - name: kargo-demo-${{ ctx.stage }}
        sources:
        - repoURL: ${{ vars.gitopsRepo }}
          desiredRevision: ${{ task.outputs.commit.commit }}
          updateTargetRevision: true
